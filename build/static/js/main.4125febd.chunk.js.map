{"version":3,"sources":["components/NavbarComponent.tsx","model/user.ts","errors/FailedLoginError.ts","apis/ERSClient.tsx","components/LoginComponent.tsx","components/QuickTable.tsx","components/userDisplay.tsx","App.tsx","index.tsx"],"names":["NavbarComponent","Navbar","color","light","expand","NavbarBrand","href","Nav","className","navbar","NavItem","to","style","marginRight","React","Component","User","id","username","password","first","last","email","role","userID","userName","firstName","lastName","this","FailedLoginError","message","Error","ERSClient","axios","create","baseURL","withCredentials","login","un","pw","a","post","response","user","data","status","getAllUsers","get","map","userObj","console","log","LoginComponent","props","setUsername","setState","currentTarget","value","setPassword","clearError","errorMessage","isError","attemptLogin","event","preventDefault","state","loggedInUser","updateUser","Form","onSubmit","FormGroup","row","Label","for","sm","Col","Input","onChange","type","name","placeholder","required","Button","Toast","isOpen","ToastHeader","icon","toggle","ToastBody","QuickTable","rows","i","key","UserDisplay","users","u","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4125febd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport class NavbarComponent extends React.Component<any,any> {\r\n  render() {\r\n    return (\r\n    <div> {/* just writing the name of a prop is shorthand for prop={true}*/}\r\n    <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Home</NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n                <NavLink to=\"/login\" style={{ marginRight: 10 }}>Login</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink to=\"/users\" style={{ marginRight: 10 }}>Users</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink to=\"/reimbursements\">Reimbursements</NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n    </Navbar>\r\n    </div>\r\n    )\r\n    }\r\n}","export class User {\r\n    userID:number\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    role: number;\r\n\r\n    constructor(id: number, username:string, password: string, first:string, last:string, email:string, role:number) {\r\n        this.userID = id\r\n        this.userName = username\r\n        this.password = password\r\n        this.firstName = first\r\n        this.lastName = last\r\n        this.email = email\r\n        this.role = role\r\n    }\r\n}\r\n\r\nexport class Role {\r\n    roleID: number;\r\n    role: string;\r\n\r\n    constructor(roleID:number, role:string) {\r\n        this.roleID = roleID\r\n        this.role = role\r\n    }\r\n}","\r\nexport class FailedLoginError extends Error {\r\n    username: string | undefined;\r\n  \r\n    constructor(message?:string, username?:string) {\r\n      super(message);\r\n      this.username = username;\r\n    }\r\n  }","import axios from 'axios';\r\nimport { Reimbursement } from '../model/reimbursement';\r\nimport { User } from '../model/user';\r\nimport { FailedLoginError } from '../errors/FailedLoginError';\r\n\r\nconst ERSClient = axios.create({\r\n    baseURL: 'http://18.232.100.1:3001',\r\n    // If you don't have the following line, your login won't work!\r\n    withCredentials: true,\r\n  });\r\n\r\n  export async function login(un: string, pw: string): Promise<User> {\r\n    try {\r\n      const response = await ERSClient.post('/login', {username: un, password: pw});\r\n      let user: User = response.data;\r\n      return user;\r\n    } catch (e) {\r\n      if(e.response.status === 401) {\r\n        throw new FailedLoginError('Failed to authenticate', un);\r\n      } else {\r\n        // We could throw a different custom error, this exposes a little too much to the user.\r\n        throw e;\r\n      }\r\n    }\r\n    \r\n  }\r\n  export async function getAllUsers() : Promise<User[]> {\r\n    const response = await ERSClient.get('/users');\r\n    return response.data.map((userObj: any) => {\r\n      const {userID, userName, password, firstName, lastName, email, role} = userObj;\r\n      console.log(userObj)\r\n      return new User(userID, userName, password, firstName, lastName, email, role);\r\n    });\r\n  }","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { login } from '../apis/ERSClient';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\ninterface ILoginComponentProps {\r\n  updateUser: (user:User) => void;\r\n}\r\n\r\ninterface ILoginComponentState {\r\n  username: string;\r\n  password: string;\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class LoginComponent extends React.Component<ILoginComponentProps, ILoginComponentState> {\r\n\r\n  constructor(props: ILoginComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setUsername = (un: any) => {\r\n    this.setState({\r\n      username: un.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  setPassword = (pw: any) => {\r\n    this.setState({\r\n      password: pw.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  attemptLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const loggedInUser : User = await login(this.state.username, this.state.password);\r\n      this.props.updateUser(loggedInUser);\r\n      this.setState({\r\n        username: '',\r\n        password: '',\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        password: '',\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form onSubmit={this.attemptLogin}>\r\n        <FormGroup row>\r\n          <Label for=\"username\" sm={2}>Username</Label>\r\n          <Col sm={6}>\r\n            {/* onChange lets Input change state, value lets Input display state */}\r\n            <Input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\" id=\"username\" placeholder=\"your username\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label for=\"password\" sm={2}>Password</Label>\r\n          <Col sm={6}>\r\n            <Input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" required />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\n\r\ninterface IQuickTableProps {\r\n  /** Array of items to be rendered in table rows */\r\n  rows: any[];\r\n}\r\n\r\nexport class QuickTable extends React.Component<IQuickTableProps> {\r\n\r\n  // HTML Table:\r\n  // <table><tbody><tr><td>data</td><td>...\r\n\r\n  render() {\r\n    return (\r\n      <table>\r\n        <tbody>\r\n          {this.props.rows.map(\r\n            (row: any, i) => {return <tr key={i}><td>{row}</td></tr>}\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n}","\r\nimport React from 'react';\r\nimport { User } from '../model/user';\r\nimport { getAllUsers } from '../apis/ERSClient';\r\nimport { QuickTable } from './QuickTable';\r\n\r\ninterface IUserDisplayState {\r\n  users: User[];\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class UserDisplay extends React.Component<any, IUserDisplayState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({\r\n        users: await getAllUsers()\r\n      })\r\n    } catch (e) {\r\n      // We set the error information in our state.\r\n      // This will let us render something about the error to the end user\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: e.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      isError: false,\r\n      errorMessage: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.isError) {\r\n      //map to a string so quicktable can render this.\r\n      return <QuickTable rows={this.state.users.map((u:User)=>{return `${u.userID} ${u.userName} ${u.password} ${u.firstName} ${u['lastName']} ${u.email} ${u.role}`})} />\r\n    } else {\r\n      return <h3>Error retrieving users: {this.state.errorMessage}</h3>\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {User} from './model/user'\r\nimport { NavbarComponent } from './components/NavbarComponent';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { LoginComponent } from './components/LoginComponent';\r\nimport { UserDisplay } from './components/userDisplay';\r\n\r\ninterface IAppState {\r\n    loggedInUser: User | null;\r\n  }\r\n\r\nexport class App extends React.Component<any, IAppState> {\r\n\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n        loggedInUser: null,\r\n      }\r\n    }\r\n\r\n    updateUser = (user:User) => {\r\n        this.setState({\r\n          loggedInUser: user,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <h1>Hello {this.state.loggedInUser ? this.state.loggedInUser.firstName + ' ' + this.state.loggedInUser.lastName : 'guest'}</h1>\r\n            <Router>\r\n                <NavbarComponent />\r\n                <Switch>\r\n                    <Route path='/login'> <LoginComponent updateUser={this.updateUser}/></Route>\r\n                    <Route path='/users' render={(props)=>{return <UserDisplay {...props} />}} />\r\n                    <Route path='/reimbursement'> <LoginComponent updateUser={this.updateUser}/></Route>\r\n                </Switch>\r\n            </Router>\r\n            <h2>{!this.state.loggedInUser ? 'Please login before proceeding.' : ''}</h2>\r\n            </>\r\n        )\r\n        \r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Most often this is the only place we touch the actual DOM, all of our work\r\n// goes inside of App.\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}