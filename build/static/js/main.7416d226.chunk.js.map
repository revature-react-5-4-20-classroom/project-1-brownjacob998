{"version":3,"sources":["components/NavbarComponent.tsx","model/reimbursement.ts","model/user.ts","errors/FailedLoginError.ts","apis/ERSClient.tsx","components/LoginComponent.tsx","components/object-table.tsx","components/GetUserComponent.tsx","components/userDisplay.tsx","components/AllUserDisplay.tsx","components/GetUserReimsComponent.tsx","components/GetReimsByStatus.tsx","components/patchReimbursement.tsx","components/reimbursementDisplay.tsx","components/newReimbursement.tsx","components/patchUser.tsx","App.tsx","index.tsx"],"names":["Navbarcomp","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","style","marginRight","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","hidden","loggedInUser","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","role","tag","Button","logoutUser","outline","Reimbursement","reimID","author","amount","dateSubmitted","dateResolved","description","resolver","status","type","this","User","id","username","password","first","last","email","userID","userName","firstName","lastName","FailedLoginError","message","Error","ERSClient","axios","create","baseURL","withCredentials","login","un","pw","a","post","response","user","data","getAllUsers","get","map","userObj","getUser","updateUser","userid","pword","fName","lName","Email","patch","firstname","lastname","getReimByUser","reimObj","getReimByStatus","updateReim","reimid","statuss","newReim","ammount","Description","Type","LoginComponent","setUsername","setState","currentTarget","value","setPassword","clearError","errorMessage","isError","attemptLogin","event","preventDefault","console","log","state","paddingLeft","Form","onSubmit","FormGroup","row","Label","for","sm","Col","Input","onChange","name","placeholder","required","Toast","ToastHeader","icon","toggle","ToastBody","React","Component","ObjectTable","Table","striped","Object","keys","objects","key","obj","index","values","GetUserComponent","setID","attemptRetrieval","updateUsers","UserDisplay","users","usersLoaded","e","Container","Row","md","size","AllUserDisplay","userLoaded","GetUserReimsComponent","reims","updateReims","GetReimsByStatus","selected","PatchReimbursementComponent","setStatus","attemptPatch","ReimbursementDisplay","Reim","reim","reimLoaded","PostReimbursementComponent","setDesc","setType","setAmount","attemptPost","alert","PatchUserComponent","setFirst","setLast","setEmail","setPass","App","clearLogin","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7416d226.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Collapse, Button, NavbarText, NavbarToggler, Navbar, NavbarBrand, Nav, NavItem, DropdownMenu, DropdownToggle, DropdownItem, UncontrolledDropdown } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {User} from '../model/user'\r\n\r\ninterface ITopNavProps {\r\n    logoutUser: ()=>void;\r\n    loggedInUser: User | null\r\n}\r\nexport const Navbarcomp = (props:ITopNavProps) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    const toggle = () => setIsOpen(!isOpen);\r\n    let styles = {\r\n        marginRight: '20px'\r\n    };\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n        <span style={styles} className=\"style\"/>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink to=\"/home\" style={{ marginRight: 10}}>Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink hidden={!!props.loggedInUser} to=\"/login\" className=\"nav-link\" activeClassName=\"active\" style={{ marginRight: -5 }}>Login</NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Users\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <NavLink to=\"/users\">Get User Info</NavLink>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavLink to=\"/pusers\">Update User Info</NavLink>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavLink hidden={!(props.loggedInUser && props.loggedInUser.role == 'Finance-Manager')}to=\"/allusers\" className=\"nav-link\" activeClassName=\"active\">Get All Users</NavLink>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Reimbursements\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <NavLink to=\"/reimbursements\">Get Reimbursement Info</NavLink>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavLink to=\"/newreimbursements\">Submit New Reimbursement</NavLink>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n            <NavItem tag={()=>{return <Button  hidden={!props.loggedInUser} onClick={props.logoutUser} color=\"secondary\" outline>Logout <Redirect to=\"/login\"></Redirect></Button>}} />\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }","export class Reimbursement {\r\n    reimID: number;\r\n    author: number;\r\n    amount: number;\r\n    dateSubmitted: number;\r\n    dateResolved: number;\r\n    description: string;\r\n    resolver: number;\r\n    status: number;\r\n    type: number;\r\n    \r\n    constructor(\r\n        reimID: number,\r\n        author: number,\r\n        amount: number,\r\n        dateSubmitted: number,\r\n        dateResolved: number,\r\n        description: string,\r\n        resolver: number,\r\n        status: number,\r\n        type: number,) \r\n        {\r\n            this.reimID = reimID\r\n            this.author = author\r\n            this.dateResolved = dateResolved\r\n            this.dateSubmitted = dateSubmitted\r\n            this.amount = amount\r\n            this.description = description\r\n            this.resolver = resolver\r\n            this.status = status\r\n            this.type = type\r\n    }\r\n}\r\n\r\nexport class Type {\r\n    typeID: number;\r\n    type: string;\r\n\r\n    constructor (typeID:number, type:string) {\r\n        this.typeID = typeID\r\n        this.type = type\r\n    }\r\n}\r\n\r\nexport class Status {\r\n    statusID: number;\r\n    status: string;\r\n\r\n    constructor (statusID:number, status:string) {\r\n        this.statusID = statusID\r\n        this.status = status\r\n    }\r\n}","export class User {\r\n    userID:number\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    role: string;\r\n\r\n    constructor(id: number, username:string, password: string, first:string, last:string, email:string, role:string) {\r\n        this.userID = id\r\n        this.userName = username\r\n        this.password = password\r\n        this.firstName = first\r\n        this.lastName = last\r\n        this.email = email\r\n        this.role = role\r\n    }\r\n}\r\n\r\nexport class Role {\r\n    roleID: number;\r\n    role: string;\r\n\r\n    constructor(roleID:number, role:string) {\r\n        this.roleID = roleID\r\n        this.role = role\r\n    }\r\n}","\r\nexport class FailedLoginError extends Error {\r\n    username: string | undefined;\r\n  \r\n    constructor(message?:string, username?:string) {\r\n      super(message);\r\n      this.username = username;\r\n    }\r\n  }","import axios from 'axios';\r\nimport { Reimbursement } from '../model/reimbursement';\r\nimport { User } from '../model/user';\r\nimport { FailedLoginError } from '../errors/FailedLoginError';\r\n\r\nconst ERSClient = axios.create({\r\n    baseURL: 'http://54.196.11.203:3001',\r\n    // If you don't have the following line, your login won't work!\r\n    withCredentials: true,\r\n  });\r\n\r\n  export async function login(un: string, pw: string): Promise<User> {\r\n    try {\r\n      const response = await ERSClient.post('/login', {username: un, password: pw});\r\n      let user: User = response.data;\r\n      return user;\r\n    } catch (e) {\r\n      if(e.response.status === 401) {\r\n        throw new FailedLoginError('Failed to authenticate', un);\r\n      } else {\r\n        // We could throw a different custom error, this exposes a little too much to the user.\r\n        throw e;\r\n      }\r\n    }\r\n    \r\n  }\r\n  export async function getAllUsers() : Promise<User[]> {\r\n    const response = await ERSClient.get('/users');\r\n    return response.data.map((userObj: any) => {\r\n      const {userID, userName, password, firstName, lastName, email, role} = userObj;\r\n      return new User(userID, userName, password, firstName, lastName, email, role);\r\n    });\r\n  }\r\n  export async function getUser(id: number) : Promise<User[]> {\r\n    const response = await ERSClient.get(`/users/${id}`);\r\n    return response.data.map((userObj: any) => {\r\n      const {userID, userName, password, firstName, lastName, email, role} = userObj;\r\n      return new User(userID, userName, password, firstName, lastName, email, role);\r\n    });\r\n  }\r\n  export async function updateUser(userid: number, pword: string, fName: string, lName:string, Email:string) : Promise<User[]> {\r\n    const response = await ERSClient.patch(\"/users\", {id: userid, username: null, password: pword, firstname: fName, lastname:fName, email: Email, role: null});\r\n    let user\r\n    const {userID, userName, password, firstName, lastName, email, role} = response.data;\r\n    return (user = [new User(userID, userName, password, firstName, lastName, email, role)]);\r\n    ;\r\n  }\r\n  export async function getReimByUser(id: number) : Promise<Reimbursement[]> {\r\n    const response = await ERSClient.get(`/reimbursements/user/${id}`);\r\n    return response.data.map((reimObj: any) => {\r\n      const {reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = reimObj;\r\n      return new Reimbursement(reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type);\r\n    });\r\n  }\r\n  export async function getReimByStatus(id: number) : Promise<Reimbursement[]> {\r\n    const response = await ERSClient.get(`/reimbursements/status/${id}`);\r\n    return response.data.map((reimObj: any) => {\r\n      const {reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = reimObj;\r\n      return new Reimbursement(reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type);\r\n    });\r\n  }\r\n  export async function updateReim(reimid: number, statuss: string) : Promise<Reimbursement[]> {\r\n    const response = await ERSClient.patch(\"/reimbursements\", {id: reimid, status: statuss });\r\n    let reim\r\n    const {reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = response.data;\r\n    return (reim = [new Reimbursement(reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type)]);\r\n    ;\r\n  }\r\n  export async function newReim(ammount: number, Description: string, Type: string) : Promise<Reimbursement[]> {\r\n    const response = await ERSClient.post(\"/reimbursements\", {amount: ammount, description: Description, type: Type });\r\n    let reim\r\n    const {reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = response.data;\r\n    return (reim = [new Reimbursement(reimID, author, amount, dateSubmitted, dateResolved, description, resolver, status, type)]);\r\n    ;\r\n  }","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { login } from '../apis/ERSClient';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\ninterface ILoginComponentProps {\r\n  updateUser: (user:User) => void;\r\n}\r\n\r\ninterface ILoginComponentState {\r\n  username: string;\r\n  password: string;\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class LoginComponent extends React.Component<ILoginComponentProps, ILoginComponentState> {\r\n\r\n  constructor(props: ILoginComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setUsername = (un: any) => {\r\n    this.setState({\r\n      username: un.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  setPassword = (pw: any) => {\r\n    this.setState({\r\n      password: pw.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  attemptLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const loggedInUser : User = await login(this.state.username, this.state.password);\r\n      this.props.updateUser(loggedInUser);\r\n      this.setState({\r\n        username: '',\r\n        password: '',\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        password: '',\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let styles = {\r\n      paddingLeft: '20px'\r\n    };\r\n    return (\r\n      <div>\r\n      <span style={styles} className=\"style\"/>\r\n      <Form onSubmit={this.attemptLogin}>\r\n        <FormGroup row>\r\n          <Label for=\"username\" sm={2}>Username</Label>\r\n          <Col sm={6}>\r\n            {/* onChange lets Input change state, value lets Input display state */}\r\n            <Input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\" id=\"username\" placeholder=\"your username\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label for=\"password\" sm={2}>Password</Label>\r\n          <Col sm={6}>\r\n            <Input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" required />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\n\r\ninterface IObjectTableProps {\r\n    objects: object[];\r\n}\r\n\r\n/** Quick reactstrap table that builds a table out of props.objects.  All objects should have the same fields in order.*/\r\nexport class ObjectTable extends React.Component<IObjectTableProps> {\r\n\r\n  render() {\r\n    return (\r\n      <Table striped >\r\n        <thead>\r\n          <tr>\r\n            {/* Generate one column header for each key on the first object in props.objects */}\r\n            {Object.keys(this.props.objects[0]).map((key: any) => {\r\n              return <th key={key}>{key}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Generate one row per object with a cell for each value on the object */}\r\n          {this.props.objects.map((obj: any, index: number) => {\r\n            return (\r\n              <tr key={index}>\r\n                {Object.values(obj).map((value: any, index: number) => {\r\n                  return <td key={index}>{value}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { getUser } from '../apis/ERSClient';\r\nimport { UserDisplay } from './userDisplay';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\n\r\ninterface IUserComponentState {\r\n  id: number,\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class GetUserComponent extends React.Component<any, IUserComponentState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setID = (un: any) => {\r\n    this.setState({\r\n      id: un.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  attemptRetrieval = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const user = await getUser(this.state.id);\r\n      this.props.updateUsers(user)\r\n    } catch (error) {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form onSubmit={this.attemptRetrieval}>\r\n        <FormGroup row>\r\n          <Label for=\"ID\" sm={8}>Enter ID for Employee</Label>\r\n          <Col sm={6}>\r\n            {/* onChange lets Input change state, value lets Input display state */}\r\n            <Input onChange={this.setID} value={this.state.id} type=\"number\" name=\"ID\" id=\"id\" placeholder=\"input ID\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","\r\nimport React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\r\nimport { getAllUsers, getUser } from '../apis/ERSClient';\r\nimport { ObjectTable } from './object-table';\r\nimport { GetUserComponent } from './GetUserComponent';\r\n\r\ninterface IUserDisplayState {\r\n  users: User[];\r\n  loggedInUser: User;\r\n  usersLoaded: boolean;\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class UserDisplay extends React.Component<any, IUserDisplayState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      loggedInUser: this.props.loggedInUser[0],\r\n      usersLoaded: false,\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  updateUsers = (user:User[]) => {\r\n    this.setState({\r\n      users: user,\r\n    })\r\n  } \r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({\r\n        loggedInUser: this.props.loggedInUser[0],\r\n        users: this.props.loggedInUser,\r\n        usersLoaded: true\r\n      })\r\n    } catch (e) {\r\n      // We set the error information in our state.\r\n      // This will let us render something about the error to the end user\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: e.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      isError: false,\r\n      errorMessage: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.isError) {\r\n      return (\r\n        <Container>\r\n          <Row>\r\n          {(this.state.usersLoaded) ?\r\n            <Col md={{ size: 8 }}>\r\n              {(this.state.loggedInUser.role == 'Finance-Manager') ?<h4>User Information</h4>:<h4>Your Information</h4>}\r\n                <ObjectTable objects={this.state.users}/>\r\n            </Col>:<></>}\r\n            {(this.state.loggedInUser) && this.state.loggedInUser.role == 'Finance-Manager' ?\r\n            <Col>\r\n               <GetUserComponent updateUsers = {this.updateUsers}/> \r\n            </Col>:<></>}\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return <h3>Error retrieving users: {this.state.errorMessage}</h3>\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\r\nimport { getAllUsers, getUser } from '../apis/ERSClient';\r\nimport { ObjectTable } from './object-table';\r\nimport { GetUserComponent } from './GetUserComponent';\r\n\r\ninterface IUserDisplayState {\r\n  users: User[];\r\n  loggedInUser: User;\r\n  userLoaded: boolean;\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class AllUserDisplay extends React.Component<any, IUserDisplayState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      loggedInUser: this.props.loggedInUser,\r\n      userLoaded: false,\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  updateUsers = (user:User[]) => {\r\n    this.setState({\r\n      users: user,\r\n    })\r\n  } \r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({\r\n        users: await getAllUsers(),\r\n        userLoaded: true\r\n      })\r\n    } catch (e) {\r\n      // We set the error information in our state.\r\n      // This will let us render something about the error to the end user\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: e.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      isError: false,\r\n      errorMessage: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.isError) {\r\n      return (\r\n        <Container>\r\n          <Row>\r\n          {(this.state.userLoaded) ?\r\n            <Col md={{ size: 8 }}>\r\n              {(this.state.loggedInUser.role == 'Finance-Manager') ?<h4>User Information</h4>:<h4>Your Information</h4>}\r\n                <ObjectTable objects={this.state.users}/>\r\n            </Col>:<></>}\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return <h3>Error retrieving users: {this.state.errorMessage}</h3>\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { getUser, getReimByUser } from '../apis/ERSClient';\r\nimport { UserDisplay } from './userDisplay';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\n\r\ninterface IReimComponentState {\r\n  id: number,\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class GetUserReimsComponent extends React.Component<any, IReimComponentState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setID = (un: any) => {\r\n    this.setState({\r\n      id: un.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  attemptRetrieval = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const reims = await getReimByUser(this.state.id);\r\n      this.props.updateReims(reims)\r\n    } catch (error) {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form onSubmit={this.attemptRetrieval}>\r\n        <FormGroup row>\r\n          <Label for=\"ID\" sm={8}>Enter ID for Employee</Label>\r\n          <Col sm={6}>\r\n            {/* onChange lets Input change state, value lets Input display state */}\r\n            <Input onChange={this.setID} value={this.state.id} type=\"number\" name=\"ID\" id=\"id\" placeholder=\"input ID\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { getUser, getReimByStatus } from '../apis/ERSClient';\r\nimport { UserDisplay } from './userDisplay';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\n\r\ninterface IReimComponentState {\r\n  id: number,\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class GetReimsByStatus extends React.Component<any, IReimComponentState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: 2,\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setID = (un: any) => {\r\n    this.setState({\r\n      id: un.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  attemptRetrieval = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const reims = await getReimByStatus(this.state.id);\r\n      this.props.updateReims(reims)\r\n    } catch (error) {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form onSubmit={this.attemptRetrieval}>\r\n        <FormGroup row>\r\n          <Label for=\"ID\" sm={8}>Select option for Status type retrieval</Label>\r\n        </FormGroup>\r\n        <FormGroup>\r\n            <select value ={this.state.id} onChange={this.setID}>\r\n              <option value=\"1\">Approved</option>\r\n              <option selected value=\"2\">Pending</option>\r\n              <option value=\"3\">Denied</option>\r\n            </select>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { updateReim } from '../apis/ERSClient';\r\nimport { UserDisplay } from './userDisplay';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\n\r\ninterface IReimComponentState {\r\n  id: number,\r\n  status:string,\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class PatchReimbursementComponent extends React.Component<any, IReimComponentState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      status: \"Pending\",\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setID = (un: any) => {\r\n    this.setState({\r\n      id: un.currentTarget.value,\r\n    })\r\n  }\r\n  setStatus = (un: any) => {\r\n    this.setState({\r\n      status: un.currentTarget.value,\r\n    })\r\n  }\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  attemptPatch = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const reims = await updateReim(this.state.id, this.state.status);\r\n      this.props.updateReims(reims)\r\n    } catch (error) {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form onSubmit={this.attemptPatch}>\r\n        <FormGroup row>\r\n            <Label for=\"ID\" sm={8}>Enter Reim ID to update and Status ID to update to</Label>\r\n            <Col sm={6}>\r\n                {/* onChange lets Input change state, value lets Input display state */}\r\n                 <Input onChange={this.setID} value={this.state.id} type=\"number\" name=\"ID\" id=\"id\" placeholder=\"input ID\" />\r\n            </Col>\r\n        </FormGroup>\r\n        <FormGroup>\r\n            <select value ={this.state.status} onChange={this.setStatus}>\r\n              <option value=\"Approved\">Approved</option>\r\n              <option selected value=\"Pending\">Pending</option>\r\n              <option value=\"Denied\">Denied</option>\r\n            </select>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Reimbursement } from '../model/reimbursement';\r\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\r\nimport { getReimByUser  } from '../apis/ERSClient';\r\nimport { QuickTable } from './QuickTable';\r\nimport {ObjectTable} from \"./object-table\"\r\nimport { GetUserReimsComponent } from './GetUserReimsComponent';\r\nimport { GetReimsByStatus } from './GetReimsByStatus';\r\nimport { PatchReimbursementComponent } from './patchReimbursement';\r\nimport { User } from '../model/user';\r\n\r\ninterface IReimDisplayState {\r\n  reim: Reimbursement[];\r\n  loggedInUser: User,\r\n  reimLoaded: boolean,\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\nexport class ReimbursementDisplay extends React.Component<any, IReimDisplayState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      reim: [],\r\n      loggedInUser: this.props.loggedInUser,\r\n      reimLoaded: false,\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  updateReims = (Reim:Reimbursement[]) => {\r\n    this.setState({\r\n      reim: Reim,\r\n    })\r\n  } \r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({\r\n        loggedInUser: this.props.loggedInUser,\r\n        reim: await getReimByUser(this.props.loggedInUser.userID),\r\n        reimLoaded: true\r\n      })\r\n    } catch (e) {\r\n      // We set the error information in our state.\r\n      // This will let us render something about the error to the end user\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: e.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      isError: false,\r\n      errorMessage: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.isError) {\r\n      return (\r\n        <Container>\r\n          <Row>\r\n          {/*(this.state.loggedInUser) ?\r\n            <Col md={{ size: 8 }}>\r\n              {(this.state.loggedInUser.role == 'Finance-Manager') ?<h4>User Information</h4>:<h4>Your Information</h4>}\r\n                <QuickTable rows={this.state.reim.map((r:Reimbursement)=>{return `${r.reimID} ${r.author} ${r.amount} ${r.dateSubmitted} ${r.dateResolved} ${r.resolver} ${r.status} ${r.type}`})}/>\r\n          </Col>:<></>*/}\r\n          {(this.state.loggedInUser) && this.state.loggedInUser.role == 'Finance-Manager' ?\r\n            <Col>\r\n               <h4>Get User's Reimbursements</h4>\r\n               <GetUserReimsComponent updateReims = {this.updateReims}/> \r\n               <h4>Get Reimbursements by Status</h4>\r\n               <GetReimsByStatus updateReims = {this.updateReims}/>\r\n               <h4>Update Reimbursement Status by ReimID</h4>\r\n               <PatchReimbursementComponent updateReims = {this.updateReims}/>  \r\n            </Col>:<></>}\r\n          {(this.state.reimLoaded) ?\r\n            <Col md={{ size: 8 }}>\r\n              {(this.state.loggedInUser.role == 'Finance-Manager') ?<h4>User Information</h4>:<h4>Your Information</h4>}\r\n                <ObjectTable objects={this.state.reim}/>\r\n          </Col>:<></>}\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return <h3>Error retrieving users: {this.state.errorMessage}</h3>\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { newReim } from '../apis/ERSClient';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\n\r\ninterface IReimComponentState {\r\n  description: string,\r\n  amount: number,\r\n  type: string,\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class PostReimbursementComponent extends React.Component<any, IReimComponentState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      description: \"\",\r\n      type: \"Other\",\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setDesc = (un: any) => {\r\n    this.setState({\r\n      description: un.currentTarget.value,\r\n    })\r\n  }\r\n  setType = (un: any) => {\r\n    this.setState({\r\n      type: un.currentTarget.value,\r\n    })\r\n  }\r\n  setAmount = (un: any) => {\r\n    this.setState({\r\n      amount: un.currentTarget.value,\r\n    })\r\n  }\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  attemptPost = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const reims = await newReim(this.state.amount, this.state.description, this.state.type);\r\n      alert(\"Reimbursement posted successfully\")\r\n    } catch (error) {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form onSubmit={this.attemptPost}>\r\n        <FormGroup row>\r\n            <Label for=\"ID\" sm={8}>Enter Amount to be Reimbursed</Label>\r\n            <Col sm={6}>\r\n                {/* onChange lets Input change state, value lets Input display state */}\r\n                 <Input onChange={this.setAmount} value={this.state.amount} type=\"number\" name=\"ID\" id=\"id\" placeholder=\"input amount\" />\r\n            </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n            <Label for=\"desc\" sm={8}>Enter Description</Label>\r\n            <Col sm={6}>\r\n                {/* onChange lets Input change state, value lets Input display state */}\r\n                 <Input onChange={this.setDesc} value={this.state.description} type=\"text\" name=\"desc\" id=\"desc\" placeholder=\"Input Description\" />\r\n            </Col>\r\n        </FormGroup>\r\n        <FormGroup>\r\n            <Label for=\"desc\">Enter Expense Type</Label>\r\n            <div>\r\n            <select value ={this.state.type} onChange={this.setType}>\r\n              <option value=\"Lodging\">Lodging</option>\r\n              <option selected value=\"Travel\">Travel</option>\r\n              <option value=\"Food\">Food</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            </div>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }}","import React from 'react';\r\nimport { User } from '../model/user';\r\nimport { Form, FormGroup, Label, Col, Input, Button, Toast, ToastHeader, ToastBody } from 'reactstrap';\r\nimport { updateUser } from '../apis/ERSClient';\r\nimport { UserDisplay } from './userDisplay';\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\n//These are any because string | null throws an error in the form\r\ninterface IUserComponentState { \r\n  firstName: any,\r\n  lastName: any,\r\n  email:any,\r\n  password: any,\r\n  loggedInUser: User,\r\n  isError: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class PatchUserComponent extends React.Component<any, IUserComponentState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      loggedInUser: this.props.loggedInUser,\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      password: null,\r\n      isError: false,\r\n      errorMessage: '',\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setFirst = (un: any) => {\r\n    this.setState({\r\n      firstName: un.currentTarget.value,\r\n    })\r\n  }\r\n  setLast = (un: any) => {\r\n    this.setState({\r\n      lastName: un.currentTarget.value,\r\n    })\r\n  }\r\n  setEmail = (un: any) => {\r\n    this.setState({\r\n      email: un.currentTarget.value,\r\n    })\r\n  }\r\n  setPass = (un: any) => {\r\n    this.setState({\r\n      password: un.currentTarget.value,\r\n    })\r\n  }\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n    })\r\n  }\r\n  //Username not included because it has to be unique. ID included for referencing in DB\r\n  attemptPatch = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const users = await updateUser(this.state.loggedInUser.userID, this.state.password, this.state.firstName, this.state.lastName, this.state.email);\r\n      this.props.logoutUser()\r\n      alert(\"User update successfully, please log back in\")\r\n    } catch (error) {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form onSubmit={this.attemptPatch}>\r\n        <h4>Leave fields blank if they shouldn't be updated</h4>\r\n        <FormGroup row>\r\n            <Label for=\"ID\" sm={8}>Enter new First Name</Label>\r\n            <Col sm={6}>\r\n                {/* onChange lets Input change state, value lets Input display state */}\r\n                 <Input onChange={this.setFirst} value={this.state.firstName} type=\"text\" name=\"ID\" id=\"id\" placeholder=\"name\"/>\r\n            </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n            <Label for=\"ID\" sm={8}>Enter new Last Name</Label>\r\n            <Col sm={6}>\r\n                {/* onChange lets Input change state, value lets Input display state */}\r\n                 <Input onChange={this.setLast} value={this.state.lastName} type=\"text\" name=\"ID\" id=\"id\" placeholder=\"name\"/>\r\n            </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n            <Label for=\"ID\" sm={8}>Enter new email</Label>\r\n            <Col sm={6}>\r\n                {/* onChange lets Input change state, value lets Input display state */}\r\n                 <Input onChange={this.setEmail} value={this.state.email} type=\"text\" name=\"ID\" id=\"id\" placeholder=\"email\"/>\r\n            </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n            <Label for=\"ID\" sm={8}>Enter new password</Label>\r\n            <Col sm={6}>\r\n                {/* onChange lets Input change state, value lets Input display state */}\r\n                 <Input onChange={this.setPass} value={this.state.password} type=\"password\" name=\"ID\" id=\"id\" placeholder=\"\"/>\r\n            </Col>\r\n        </FormGroup>\r\n        <Button color=\"info\">Submit</Button>\r\n      </Form>\r\n      <Toast isOpen={this.state.isError}>\r\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\r\n          Error!\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          {this.state.errorMessage}\r\n        </ToastBody>\r\n      </Toast>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport {User} from './model/user'\r\nimport { Navbarcomp } from './components/NavbarComponent';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { LoginComponent } from './components/LoginComponent';\r\nimport { UserDisplay } from './components/userDisplay';\r\nimport { AllUserDisplay } from './components/AllUserDisplay';\r\nimport { GetUserComponent } from './components/GetUserComponent';\r\nimport { ReimbursementDisplay } from './components/reimbursementDisplay';\r\nimport { PostReimbursementComponent } from './components/newReimbursement';\r\nimport {PatchUserComponent} from './components/patchUser'\r\n\r\ninterface IAppState {\r\n    loggedInUser: User | null;\r\n  }\r\n\r\nexport class App extends React.Component<any, IAppState> {\r\n\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n        loggedInUser: null,\r\n      }}\r\n\r\n    updateUser = (user:User) => {\r\n        this.setState({\r\n          loggedInUser: user,\r\n        })\r\n    }\r\n\r\n    clearLogin = () => {\r\n      this.setState ({\r\n        loggedInUser: null\r\n      })\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <h1>ERS Client</h1>\r\n            <h2>\r\n              Hello {this.state.loggedInUser ?\r\n             this.state.loggedInUser.firstName + ' ' + this.state.loggedInUser.lastName :\r\n              'guest'}\r\n            </h2>\r\n            <Router>\r\n                <Navbarcomp loggedInUser={this.state.loggedInUser} logoutUser ={this.clearLogin}/>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                      {!this.state.loggedInUser ? (\r\n                        <Redirect to=\"/login\" />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Route>\r\n                    <Route path=\"/home\">\r\n                      <h2>\r\n                        Welcome{\" \"}\r\n                        {(this.state.loggedInUser) && this.state.loggedInUser.role == 'Finance-Manager' ? `home manager,`\r\n                        : this.state.loggedInUser?`home, ${this.state.loggedInUser.userName}!`\r\n                        : \"guest!\"}\r\n                      </h2>\r\n                    </Route>\r\n                    <Route path='/login'> <LoginComponent updateUser={this.updateUser}/>\r\n                    {this.state.loggedInUser ?\r\n                     <Redirect to=\"/home\"></Redirect>:<></>}\r\n                     </Route>\r\n                    <Route path='/users' render={(props)=>{return <UserDisplay loggedInUser = {[this.state.loggedInUser]} />}} />\r\n                    <Route path='/pusers' render={(props)=>{return <PatchUserComponent loggedInUser = {this.state.loggedInUser} logoutUser = {this.clearLogin} />}} />\r\n                    <Route path='/allusers' render={(props)=>{return <AllUserDisplay loggedInUser={this.state.loggedInUser} />}} />\r\n                    <Route path='/reimbursements'> <ReimbursementDisplay loggedInUser={this.state.loggedInUser}/></Route>\r\n                    <Route path='/newreimbursements'> <PostReimbursementComponent loggedInUser={this.state.loggedInUser}/></Route>\r\n                    <Route>\r\n                        {!this.state.loggedInUser ? <Redirect to=\"/login\" /> :<></> }\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n            <h4>{!this.state.loggedInUser ? 'Please login before proceeding.' : ''}</h4>\r\n            </>\r\n        )\r\n        \r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Most often this is the only place we touch the actual DOM, all of our work\r\n// goes inside of App.\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}